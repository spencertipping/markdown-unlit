#!/usr/bin/env perl
use strict;
use warnings;
use v5.14;
#line 21 "unlit.md"
sub parse($)
{ my @lines   = ('', split /\n/, $_[0]);
  my @toggles = (0, grep $lines[$_] =~ /^\s*\`\`\`/, 1..$#lines);
  my %link_seen;
  grep ref() || !$link_seen{$_}++,
  map((join("\n", @lines[$toggles[$_-2]..$toggles[$_-1]]) =~ /\]\(([^)]+\.md)\)/g,
       [$toggles[$_-1] + 1,
        $lines[$toggles[$_-1]] =~ /^\s*\`\`\`(.*)$/,
        join "\n", @lines[$toggles[$_-1]+1..$toggles[$_]-1]]),
      grep !($_ & 1), 2..$#toggles),
  join("\n", @lines[$toggles[-1]..$#lines]) =~ /\]\(([^)]+\.md)\)/g }
#line 44 "unlit.md"
our %languages;

sub compile($);
sub compile($)
{ my ($f) = @_;
  return () unless -r $f;
  open my $fh, "< $f" or die "open $f: $!";
  map ref() ? $languages{$$_[1]}
              ? $$_[1] =~ /^pl|^perl/ ? "#line $$_[0] \"$f\"\n$$_[2]\n" : $$_[2]
              : ()
            : compile $f =~ s|[^/]*$||r . $_,
      parse join '', <$fh> }

$languages{$1} = shift @ARGV while @ARGV && $ARGV[0] =~ /^--(.*)/;
print for map compile($_), @ARGV;
